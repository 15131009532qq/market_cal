<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mudule.mumzonemarketcal.component.mapper.member.MemberLevelMapper" >
  <resultMap id="BaseResultMap" type="com.mudule.mumzonemarketcal.component.po.member.MemberLevel" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="company_id" property="companyId" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="upgrade_type" property="upgradeType" jdbcType="TINYINT" />
    <result column="integral" property="integral" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="dr" property="dr" jdbcType="TINYINT" />
    <result column="discount_type" property="discountType" jdbcType="TINYINT" />
    <result column="member_discount" property="memberDiscount" jdbcType="VARCHAR" />
    <result column="member_price_level_id" property="memberPriceLevelId" jdbcType="VARCHAR" />
    <result column="level_describe" property="levelDescribe" jdbcType="VARCHAR" />
    <result column="valid_type" property="validType" jdbcType="TINYINT" />
    <result column="retain_time" property="retainTime" jdbcType="INTEGER" />
    <result column="total_amount" property="totalAmount" jdbcType="INTEGER" />
    <result column="reward_integral" property="rewardIntegral" jdbcType="INTEGER" />
    <result column="source" property="source" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, company_id, code, name, upgrade_type, integral, status, create_time, update_time, 
    dr, discount_type, member_discount, member_price_level_id, level_describe, valid_type, 
    retain_time, total_amount, reward_integral, source
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mudule.mumzonemarketcal.component.po.member.MemberLevelExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from member_level
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from member_level
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from member_level
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.mudule.mumzonemarketcal.component.po.member.MemberLevelExample" >
    delete from member_level
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mudule.mumzonemarketcal.component.po.member.MemberLevel" >
    insert into member_level (id, company_id, code, 
      name, upgrade_type, integral, 
      status, create_time, update_time, 
      dr, discount_type, member_discount, 
      member_price_level_id, level_describe, valid_type, 
      retain_time, total_amount, reward_integral, 
      source)
    values (#{id,jdbcType=VARCHAR}, #{companyId,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{upgradeType,jdbcType=TINYINT}, #{integral,jdbcType=INTEGER}, 
      #{status,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{dr,jdbcType=TINYINT}, #{discountType,jdbcType=TINYINT}, #{memberDiscount,jdbcType=VARCHAR}, 
      #{memberPriceLevelId,jdbcType=VARCHAR}, #{levelDescribe,jdbcType=VARCHAR}, #{validType,jdbcType=TINYINT}, 
      #{retainTime,jdbcType=INTEGER}, #{totalAmount,jdbcType=INTEGER}, #{rewardIntegral,jdbcType=INTEGER}, 
      #{source,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.mudule.mumzonemarketcal.component.po.member.MemberLevel" >
    insert into member_level
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="upgradeType != null" >
        upgrade_type,
      </if>
      <if test="integral != null" >
        integral,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="dr != null" >
        dr,
      </if>
      <if test="discountType != null" >
        discount_type,
      </if>
      <if test="memberDiscount != null" >
        member_discount,
      </if>
      <if test="memberPriceLevelId != null" >
        member_price_level_id,
      </if>
      <if test="levelDescribe != null" >
        level_describe,
      </if>
      <if test="validType != null" >
        valid_type,
      </if>
      <if test="retainTime != null" >
        retain_time,
      </if>
      <if test="totalAmount != null" >
        total_amount,
      </if>
      <if test="rewardIntegral != null" >
        reward_integral,
      </if>
      <if test="source != null" >
        source,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="upgradeType != null" >
        #{upgradeType,jdbcType=TINYINT},
      </if>
      <if test="integral != null" >
        #{integral,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dr != null" >
        #{dr,jdbcType=TINYINT},
      </if>
      <if test="discountType != null" >
        #{discountType,jdbcType=TINYINT},
      </if>
      <if test="memberDiscount != null" >
        #{memberDiscount,jdbcType=VARCHAR},
      </if>
      <if test="memberPriceLevelId != null" >
        #{memberPriceLevelId,jdbcType=VARCHAR},
      </if>
      <if test="levelDescribe != null" >
        #{levelDescribe,jdbcType=VARCHAR},
      </if>
      <if test="validType != null" >
        #{validType,jdbcType=TINYINT},
      </if>
      <if test="retainTime != null" >
        #{retainTime,jdbcType=INTEGER},
      </if>
      <if test="totalAmount != null" >
        #{totalAmount,jdbcType=INTEGER},
      </if>
      <if test="rewardIntegral != null" >
        #{rewardIntegral,jdbcType=INTEGER},
      </if>
      <if test="source != null" >
        #{source,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mudule.mumzonemarketcal.component.po.member.MemberLevelExample" resultType="java.lang.Integer" >
    select count(*) from member_level
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update member_level
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.companyId != null" >
        company_id = #{record.companyId,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null" >
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.upgradeType != null" >
        upgrade_type = #{record.upgradeType,jdbcType=TINYINT},
      </if>
      <if test="record.integral != null" >
        integral = #{record.integral,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dr != null" >
        dr = #{record.dr,jdbcType=TINYINT},
      </if>
      <if test="record.discountType != null" >
        discount_type = #{record.discountType,jdbcType=TINYINT},
      </if>
      <if test="record.memberDiscount != null" >
        member_discount = #{record.memberDiscount,jdbcType=VARCHAR},
      </if>
      <if test="record.memberPriceLevelId != null" >
        member_price_level_id = #{record.memberPriceLevelId,jdbcType=VARCHAR},
      </if>
      <if test="record.levelDescribe != null" >
        level_describe = #{record.levelDescribe,jdbcType=VARCHAR},
      </if>
      <if test="record.validType != null" >
        valid_type = #{record.validType,jdbcType=TINYINT},
      </if>
      <if test="record.retainTime != null" >
        retain_time = #{record.retainTime,jdbcType=INTEGER},
      </if>
      <if test="record.totalAmount != null" >
        total_amount = #{record.totalAmount,jdbcType=INTEGER},
      </if>
      <if test="record.rewardIntegral != null" >
        reward_integral = #{record.rewardIntegral,jdbcType=INTEGER},
      </if>
      <if test="record.source != null" >
        source = #{record.source,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update member_level
    set id = #{record.id,jdbcType=VARCHAR},
      company_id = #{record.companyId,jdbcType=VARCHAR},
      code = #{record.code,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      upgrade_type = #{record.upgradeType,jdbcType=TINYINT},
      integral = #{record.integral,jdbcType=INTEGER},
      status = #{record.status,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      dr = #{record.dr,jdbcType=TINYINT},
      discount_type = #{record.discountType,jdbcType=TINYINT},
      member_discount = #{record.memberDiscount,jdbcType=VARCHAR},
      member_price_level_id = #{record.memberPriceLevelId,jdbcType=VARCHAR},
      level_describe = #{record.levelDescribe,jdbcType=VARCHAR},
      valid_type = #{record.validType,jdbcType=TINYINT},
      retain_time = #{record.retainTime,jdbcType=INTEGER},
      total_amount = #{record.totalAmount,jdbcType=INTEGER},
      reward_integral = #{record.rewardIntegral,jdbcType=INTEGER},
      source = #{record.source,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mudule.mumzonemarketcal.component.po.member.MemberLevel" >
    update member_level
    <set >
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="upgradeType != null" >
        upgrade_type = #{upgradeType,jdbcType=TINYINT},
      </if>
      <if test="integral != null" >
        integral = #{integral,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dr != null" >
        dr = #{dr,jdbcType=TINYINT},
      </if>
      <if test="discountType != null" >
        discount_type = #{discountType,jdbcType=TINYINT},
      </if>
      <if test="memberDiscount != null" >
        member_discount = #{memberDiscount,jdbcType=VARCHAR},
      </if>
      <if test="memberPriceLevelId != null" >
        member_price_level_id = #{memberPriceLevelId,jdbcType=VARCHAR},
      </if>
      <if test="levelDescribe != null" >
        level_describe = #{levelDescribe,jdbcType=VARCHAR},
      </if>
      <if test="validType != null" >
        valid_type = #{validType,jdbcType=TINYINT},
      </if>
      <if test="retainTime != null" >
        retain_time = #{retainTime,jdbcType=INTEGER},
      </if>
      <if test="totalAmount != null" >
        total_amount = #{totalAmount,jdbcType=INTEGER},
      </if>
      <if test="rewardIntegral != null" >
        reward_integral = #{rewardIntegral,jdbcType=INTEGER},
      </if>
      <if test="source != null" >
        source = #{source,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mudule.mumzonemarketcal.component.po.member.MemberLevel" >
    update member_level
    set company_id = #{companyId,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      upgrade_type = #{upgradeType,jdbcType=TINYINT},
      integral = #{integral,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      dr = #{dr,jdbcType=TINYINT},
      discount_type = #{discountType,jdbcType=TINYINT},
      member_discount = #{memberDiscount,jdbcType=VARCHAR},
      member_price_level_id = #{memberPriceLevelId,jdbcType=VARCHAR},
      level_describe = #{levelDescribe,jdbcType=VARCHAR},
      valid_type = #{validType,jdbcType=TINYINT},
      retain_time = #{retainTime,jdbcType=INTEGER},
      total_amount = #{totalAmount,jdbcType=INTEGER},
      reward_integral = #{rewardIntegral,jdbcType=INTEGER},
      source = #{source,jdbcType=TINYINT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>