<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mudule.mumzonemarketcal.component.mapper.member.MemberCompanyAccountMapper" >
  <resultMap id="BaseResultMap" type="com.mudule.mumzonemarketcal.component.po.member.MemberCompanyAccount" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="company_id" property="companyId" jdbcType="VARCHAR" />
    <result column="member_company_id" property="memberCompanyId" jdbcType="VARCHAR" />
    <result column="level_id" property="levelId" jdbcType="VARCHAR" />
    <result column="integral_total" property="integralTotal" jdbcType="INTEGER" />
    <result column="integral" property="integral" jdbcType="INTEGER" />
    <result column="total_amount" property="totalAmount" jdbcType="DECIMAL" />
    <result column="recharge_amount" property="rechargeAmount" jdbcType="DECIMAL" />
    <result column="rebate_amount" property="rebateAmount" jdbcType="DECIMAL" />
    <result column="current_amount" property="currentAmount" jdbcType="DECIMAL" />
    <result column="withdraw_amount" property="withdrawAmount" jdbcType="DECIMAL" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, company_id, member_company_id, level_id, integral_total, integral, total_amount, 
    recharge_amount, rebate_amount, current_amount, withdraw_amount, remark, create_time, 
    update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mudule.mumzonemarketcal.component.po.member.MemberCompanyAccountExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from member_company_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from member_company_account
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from member_company_account
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.mudule.mumzonemarketcal.component.po.member.MemberCompanyAccountExample" >
    delete from member_company_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mudule.mumzonemarketcal.component.po.member.MemberCompanyAccount" >
    insert into member_company_account (id, company_id, member_company_id, 
      level_id, integral_total, integral, 
      total_amount, recharge_amount, rebate_amount, 
      current_amount, withdraw_amount, remark, 
      create_time, update_time)
    values (#{id,jdbcType=VARCHAR}, #{companyId,jdbcType=VARCHAR}, #{memberCompanyId,jdbcType=VARCHAR}, 
      #{levelId,jdbcType=VARCHAR}, #{integralTotal,jdbcType=INTEGER}, #{integral,jdbcType=INTEGER}, 
      #{totalAmount,jdbcType=DECIMAL}, #{rechargeAmount,jdbcType=DECIMAL}, #{rebateAmount,jdbcType=DECIMAL}, 
      #{currentAmount,jdbcType=DECIMAL}, #{withdrawAmount,jdbcType=DECIMAL}, #{remark,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.mudule.mumzonemarketcal.component.po.member.MemberCompanyAccount" >
    insert into member_company_account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="memberCompanyId != null" >
        member_company_id,
      </if>
      <if test="levelId != null" >
        level_id,
      </if>
      <if test="integralTotal != null" >
        integral_total,
      </if>
      <if test="integral != null" >
        integral,
      </if>
      <if test="totalAmount != null" >
        total_amount,
      </if>
      <if test="rechargeAmount != null" >
        recharge_amount,
      </if>
      <if test="rebateAmount != null" >
        rebate_amount,
      </if>
      <if test="currentAmount != null" >
        current_amount,
      </if>
      <if test="withdrawAmount != null" >
        withdraw_amount,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="memberCompanyId != null" >
        #{memberCompanyId,jdbcType=VARCHAR},
      </if>
      <if test="levelId != null" >
        #{levelId,jdbcType=VARCHAR},
      </if>
      <if test="integralTotal != null" >
        #{integralTotal,jdbcType=INTEGER},
      </if>
      <if test="integral != null" >
        #{integral,jdbcType=INTEGER},
      </if>
      <if test="totalAmount != null" >
        #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="rechargeAmount != null" >
        #{rechargeAmount,jdbcType=DECIMAL},
      </if>
      <if test="rebateAmount != null" >
        #{rebateAmount,jdbcType=DECIMAL},
      </if>
      <if test="currentAmount != null" >
        #{currentAmount,jdbcType=DECIMAL},
      </if>
      <if test="withdrawAmount != null" >
        #{withdrawAmount,jdbcType=DECIMAL},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mudule.mumzonemarketcal.component.po.member.MemberCompanyAccountExample" resultType="java.lang.Integer" >
    select count(*) from member_company_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update member_company_account
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.companyId != null" >
        company_id = #{record.companyId,jdbcType=VARCHAR},
      </if>
      <if test="record.memberCompanyId != null" >
        member_company_id = #{record.memberCompanyId,jdbcType=VARCHAR},
      </if>
      <if test="record.levelId != null" >
        level_id = #{record.levelId,jdbcType=VARCHAR},
      </if>
      <if test="record.integralTotal != null" >
        integral_total = #{record.integralTotal,jdbcType=INTEGER},
      </if>
      <if test="record.integral != null" >
        integral = #{record.integral,jdbcType=INTEGER},
      </if>
      <if test="record.totalAmount != null" >
        total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.rechargeAmount != null" >
        recharge_amount = #{record.rechargeAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.rebateAmount != null" >
        rebate_amount = #{record.rebateAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.currentAmount != null" >
        current_amount = #{record.currentAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.withdrawAmount != null" >
        withdraw_amount = #{record.withdrawAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update member_company_account
    set id = #{record.id,jdbcType=VARCHAR},
      company_id = #{record.companyId,jdbcType=VARCHAR},
      member_company_id = #{record.memberCompanyId,jdbcType=VARCHAR},
      level_id = #{record.levelId,jdbcType=VARCHAR},
      integral_total = #{record.integralTotal,jdbcType=INTEGER},
      integral = #{record.integral,jdbcType=INTEGER},
      total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      recharge_amount = #{record.rechargeAmount,jdbcType=DECIMAL},
      rebate_amount = #{record.rebateAmount,jdbcType=DECIMAL},
      current_amount = #{record.currentAmount,jdbcType=DECIMAL},
      withdraw_amount = #{record.withdrawAmount,jdbcType=DECIMAL},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mudule.mumzonemarketcal.component.po.member.MemberCompanyAccount" >
    update member_company_account
    <set >
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="memberCompanyId != null" >
        member_company_id = #{memberCompanyId,jdbcType=VARCHAR},
      </if>
      <if test="levelId != null" >
        level_id = #{levelId,jdbcType=VARCHAR},
      </if>
      <if test="integralTotal != null" >
        integral_total = #{integralTotal,jdbcType=INTEGER},
      </if>
      <if test="integral != null" >
        integral = #{integral,jdbcType=INTEGER},
      </if>
      <if test="totalAmount != null" >
        total_amount = #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="rechargeAmount != null" >
        recharge_amount = #{rechargeAmount,jdbcType=DECIMAL},
      </if>
      <if test="rebateAmount != null" >
        rebate_amount = #{rebateAmount,jdbcType=DECIMAL},
      </if>
      <if test="currentAmount != null" >
        current_amount = #{currentAmount,jdbcType=DECIMAL},
      </if>
      <if test="withdrawAmount != null" >
        withdraw_amount = #{withdrawAmount,jdbcType=DECIMAL},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mudule.mumzonemarketcal.component.po.member.MemberCompanyAccount" >
    update member_company_account
    set company_id = #{companyId,jdbcType=VARCHAR},
      member_company_id = #{memberCompanyId,jdbcType=VARCHAR},
      level_id = #{levelId,jdbcType=VARCHAR},
      integral_total = #{integralTotal,jdbcType=INTEGER},
      integral = #{integral,jdbcType=INTEGER},
      total_amount = #{totalAmount,jdbcType=DECIMAL},
      recharge_amount = #{rechargeAmount,jdbcType=DECIMAL},
      rebate_amount = #{rebateAmount,jdbcType=DECIMAL},
      current_amount = #{currentAmount,jdbcType=DECIMAL},
      withdraw_amount = #{withdrawAmount,jdbcType=DECIMAL},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>