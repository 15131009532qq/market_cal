<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mudule.mumzonemarketcal.component.mapper.base.BaseQuickPaymenLimitMapper" >
  <resultMap id="BaseResultMap" type="com.mudule.mumzonemarketcal.component.po.base.BaseQuickPaymenLimit" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="payment_channel" property="paymentChannel" jdbcType="VARCHAR" />
    <result column="bank_id" property="bankId" jdbcType="VARCHAR" />
    <result column="bank_name" property="bankName" jdbcType="VARCHAR" />
    <result column="single_limit" property="singleLimit" jdbcType="DECIMAL" />
    <result column="day_limit" property="dayLimit" jdbcType="DECIMAL" />
    <result column="month_limit" property="monthLimit" jdbcType="DECIMAL" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="dr" property="dr" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, payment_channel, bank_id, bank_name, single_limit, day_limit, month_limit, status, 
    create_time, update_time, dr
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mudule.mumzonemarketcal.component.po.base.BaseQuickPaymenLimitExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from base_quick_paymen_limit
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from base_quick_paymen_limit
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from base_quick_paymen_limit
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.mudule.mumzonemarketcal.component.po.base.BaseQuickPaymenLimitExample" >
    delete from base_quick_paymen_limit
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mudule.mumzonemarketcal.component.po.base.BaseQuickPaymenLimit" >
    insert into base_quick_paymen_limit (id, payment_channel, bank_id, 
      bank_name, single_limit, day_limit, 
      month_limit, status, create_time, 
      update_time, dr)
    values (#{id,jdbcType=VARCHAR}, #{paymentChannel,jdbcType=VARCHAR}, #{bankId,jdbcType=VARCHAR}, 
      #{bankName,jdbcType=VARCHAR}, #{singleLimit,jdbcType=DECIMAL}, #{dayLimit,jdbcType=DECIMAL}, 
      #{monthLimit,jdbcType=DECIMAL}, #{status,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{dr,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.mudule.mumzonemarketcal.component.po.base.BaseQuickPaymenLimit" >
    insert into base_quick_paymen_limit
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="paymentChannel != null" >
        payment_channel,
      </if>
      <if test="bankId != null" >
        bank_id,
      </if>
      <if test="bankName != null" >
        bank_name,
      </if>
      <if test="singleLimit != null" >
        single_limit,
      </if>
      <if test="dayLimit != null" >
        day_limit,
      </if>
      <if test="monthLimit != null" >
        month_limit,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="dr != null" >
        dr,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="paymentChannel != null" >
        #{paymentChannel,jdbcType=VARCHAR},
      </if>
      <if test="bankId != null" >
        #{bankId,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null" >
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="singleLimit != null" >
        #{singleLimit,jdbcType=DECIMAL},
      </if>
      <if test="dayLimit != null" >
        #{dayLimit,jdbcType=DECIMAL},
      </if>
      <if test="monthLimit != null" >
        #{monthLimit,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dr != null" >
        #{dr,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mudule.mumzonemarketcal.component.po.base.BaseQuickPaymenLimitExample" resultType="java.lang.Integer" >
    select count(*) from base_quick_paymen_limit
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update base_quick_paymen_limit
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentChannel != null" >
        payment_channel = #{record.paymentChannel,jdbcType=VARCHAR},
      </if>
      <if test="record.bankId != null" >
        bank_id = #{record.bankId,jdbcType=VARCHAR},
      </if>
      <if test="record.bankName != null" >
        bank_name = #{record.bankName,jdbcType=VARCHAR},
      </if>
      <if test="record.singleLimit != null" >
        single_limit = #{record.singleLimit,jdbcType=DECIMAL},
      </if>
      <if test="record.dayLimit != null" >
        day_limit = #{record.dayLimit,jdbcType=DECIMAL},
      </if>
      <if test="record.monthLimit != null" >
        month_limit = #{record.monthLimit,jdbcType=DECIMAL},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dr != null" >
        dr = #{record.dr,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update base_quick_paymen_limit
    set id = #{record.id,jdbcType=VARCHAR},
      payment_channel = #{record.paymentChannel,jdbcType=VARCHAR},
      bank_id = #{record.bankId,jdbcType=VARCHAR},
      bank_name = #{record.bankName,jdbcType=VARCHAR},
      single_limit = #{record.singleLimit,jdbcType=DECIMAL},
      day_limit = #{record.dayLimit,jdbcType=DECIMAL},
      month_limit = #{record.monthLimit,jdbcType=DECIMAL},
      status = #{record.status,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      dr = #{record.dr,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mudule.mumzonemarketcal.component.po.base.BaseQuickPaymenLimit" >
    update base_quick_paymen_limit
    <set >
      <if test="paymentChannel != null" >
        payment_channel = #{paymentChannel,jdbcType=VARCHAR},
      </if>
      <if test="bankId != null" >
        bank_id = #{bankId,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null" >
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="singleLimit != null" >
        single_limit = #{singleLimit,jdbcType=DECIMAL},
      </if>
      <if test="dayLimit != null" >
        day_limit = #{dayLimit,jdbcType=DECIMAL},
      </if>
      <if test="monthLimit != null" >
        month_limit = #{monthLimit,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dr != null" >
        dr = #{dr,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mudule.mumzonemarketcal.component.po.base.BaseQuickPaymenLimit" >
    update base_quick_paymen_limit
    set payment_channel = #{paymentChannel,jdbcType=VARCHAR},
      bank_id = #{bankId,jdbcType=VARCHAR},
      bank_name = #{bankName,jdbcType=VARCHAR},
      single_limit = #{singleLimit,jdbcType=DECIMAL},
      day_limit = #{dayLimit,jdbcType=DECIMAL},
      month_limit = #{monthLimit,jdbcType=DECIMAL},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      dr = #{dr,jdbcType=TINYINT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>