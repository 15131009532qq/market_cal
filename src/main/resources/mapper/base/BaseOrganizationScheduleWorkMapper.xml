<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mudule.mumzonemarketcal.component.mapper.base.BaseOrganizationScheduleWorkMapper" >
  <resultMap id="BaseResultMap" type="com.mudule.mumzonemarketcal.component.po.base.BaseOrganizationScheduleWork" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="org_id" property="orgId" jdbcType="VARCHAR" />
    <result column="org_name" property="orgName" jdbcType="VARCHAR" />
    <result column="schedule_id" property="scheduleId" jdbcType="VARCHAR" />
    <result column="schedule_name" property="scheduleName" jdbcType="VARCHAR" />
    <result column="schedule_day" property="scheduleDay" jdbcType="DATE" />
    <result column="employee_id" property="employeeId" jdbcType="VARCHAR" />
    <result column="employee_name" property="employeeName" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="dr" property="dr" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, org_id, org_name, schedule_id, schedule_name, schedule_day, employee_id, employee_name, 
    update_time, create_time, dr
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mudule.mumzonemarketcal.component.po.base.BaseOrganizationScheduleWorkExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from base_organization_schedule_work
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from base_organization_schedule_work
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from base_organization_schedule_work
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.mudule.mumzonemarketcal.component.po.base.BaseOrganizationScheduleWorkExample" >
    delete from base_organization_schedule_work
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mudule.mumzonemarketcal.component.po.base.BaseOrganizationScheduleWork" >
    insert into base_organization_schedule_work (id, org_id, org_name, 
      schedule_id, schedule_name, schedule_day, 
      employee_id, employee_name, update_time, 
      create_time, dr)
    values (#{id,jdbcType=VARCHAR}, #{orgId,jdbcType=VARCHAR}, #{orgName,jdbcType=VARCHAR}, 
      #{scheduleId,jdbcType=VARCHAR}, #{scheduleName,jdbcType=VARCHAR}, #{scheduleDay,jdbcType=DATE}, 
      #{employeeId,jdbcType=VARCHAR}, #{employeeName,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP}, #{dr,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.mudule.mumzonemarketcal.component.po.base.BaseOrganizationScheduleWork" >
    insert into base_organization_schedule_work
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orgId != null" >
        org_id,
      </if>
      <if test="orgName != null" >
        org_name,
      </if>
      <if test="scheduleId != null" >
        schedule_id,
      </if>
      <if test="scheduleName != null" >
        schedule_name,
      </if>
      <if test="scheduleDay != null" >
        schedule_day,
      </if>
      <if test="employeeId != null" >
        employee_id,
      </if>
      <if test="employeeName != null" >
        employee_name,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="dr != null" >
        dr,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="orgId != null" >
        #{orgId,jdbcType=VARCHAR},
      </if>
      <if test="orgName != null" >
        #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="scheduleId != null" >
        #{scheduleId,jdbcType=VARCHAR},
      </if>
      <if test="scheduleName != null" >
        #{scheduleName,jdbcType=VARCHAR},
      </if>
      <if test="scheduleDay != null" >
        #{scheduleDay,jdbcType=DATE},
      </if>
      <if test="employeeId != null" >
        #{employeeId,jdbcType=VARCHAR},
      </if>
      <if test="employeeName != null" >
        #{employeeName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dr != null" >
        #{dr,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mudule.mumzonemarketcal.component.po.base.BaseOrganizationScheduleWorkExample" resultType="java.lang.Integer" >
    select count(*) from base_organization_schedule_work
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update base_organization_schedule_work
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.orgId != null" >
        org_id = #{record.orgId,jdbcType=VARCHAR},
      </if>
      <if test="record.orgName != null" >
        org_name = #{record.orgName,jdbcType=VARCHAR},
      </if>
      <if test="record.scheduleId != null" >
        schedule_id = #{record.scheduleId,jdbcType=VARCHAR},
      </if>
      <if test="record.scheduleName != null" >
        schedule_name = #{record.scheduleName,jdbcType=VARCHAR},
      </if>
      <if test="record.scheduleDay != null" >
        schedule_day = #{record.scheduleDay,jdbcType=DATE},
      </if>
      <if test="record.employeeId != null" >
        employee_id = #{record.employeeId,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeName != null" >
        employee_name = #{record.employeeName,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dr != null" >
        dr = #{record.dr,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update base_organization_schedule_work
    set id = #{record.id,jdbcType=VARCHAR},
      org_id = #{record.orgId,jdbcType=VARCHAR},
      org_name = #{record.orgName,jdbcType=VARCHAR},
      schedule_id = #{record.scheduleId,jdbcType=VARCHAR},
      schedule_name = #{record.scheduleName,jdbcType=VARCHAR},
      schedule_day = #{record.scheduleDay,jdbcType=DATE},
      employee_id = #{record.employeeId,jdbcType=VARCHAR},
      employee_name = #{record.employeeName,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      dr = #{record.dr,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mudule.mumzonemarketcal.component.po.base.BaseOrganizationScheduleWork" >
    update base_organization_schedule_work
    <set >
      <if test="orgId != null" >
        org_id = #{orgId,jdbcType=VARCHAR},
      </if>
      <if test="orgName != null" >
        org_name = #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="scheduleId != null" >
        schedule_id = #{scheduleId,jdbcType=VARCHAR},
      </if>
      <if test="scheduleName != null" >
        schedule_name = #{scheduleName,jdbcType=VARCHAR},
      </if>
      <if test="scheduleDay != null" >
        schedule_day = #{scheduleDay,jdbcType=DATE},
      </if>
      <if test="employeeId != null" >
        employee_id = #{employeeId,jdbcType=VARCHAR},
      </if>
      <if test="employeeName != null" >
        employee_name = #{employeeName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dr != null" >
        dr = #{dr,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mudule.mumzonemarketcal.component.po.base.BaseOrganizationScheduleWork" >
    update base_organization_schedule_work
    set org_id = #{orgId,jdbcType=VARCHAR},
      org_name = #{orgName,jdbcType=VARCHAR},
      schedule_id = #{scheduleId,jdbcType=VARCHAR},
      schedule_name = #{scheduleName,jdbcType=VARCHAR},
      schedule_day = #{scheduleDay,jdbcType=DATE},
      employee_id = #{employeeId,jdbcType=VARCHAR},
      employee_name = #{employeeName,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      dr = #{dr,jdbcType=TINYINT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>