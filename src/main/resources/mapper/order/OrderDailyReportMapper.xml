<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mudule.mumzonemarketcal.component.mapper.order.OrderDailyReportMapper" >
  <resultMap id="BaseResultMap" type="com.mudule.mumzonemarketcal.component.po.order.OrderDailyReport" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="company_id" property="companyId" jdbcType="VARCHAR" />
    <result column="shop_id" property="shopId" jdbcType="VARCHAR" />
    <result column="report_date" property="reportDate" jdbcType="DATE" />
    <result column="daily_amount" property="dailyAmount" jdbcType="DECIMAL" />
    <result column="daily_count" property="dailyCount" jdbcType="INTEGER" />
    <result column="average_price" property="averagePrice" jdbcType="DECIMAL" />
    <result column="actual_amount" property="actualAmount" jdbcType="DECIMAL" />
    <result column="discount_amount" property="discountAmount" jdbcType="DECIMAL" />
    <result column="negotiation_num" property="negotiationNum" jdbcType="INTEGER" />
    <result column="negotiation_amount" property="negotiationAmount" jdbcType="DECIMAL" />
    <result column="activity_amount" property="activityAmount" jdbcType="DECIMAL" />
    <result column="ticket_amount" property="ticketAmount" jdbcType="DECIMAL" />
    <result column="loose_num" property="looseNum" jdbcType="INTEGER" />
    <result column="loose_amount" property="looseAmount" jdbcType="DECIMAL" />
    <result column="Integral_amount" property="integralAmount" jdbcType="DECIMAL" />
    <result column="received_amount" property="receivedAmount" jdbcType="DECIMAL" />
    <result column="card_recharge" property="cardRecharge" jdbcType="DECIMAL" />
    <result column="recharge_amount" property="rechargeAmount" jdbcType="DECIMAL" />
    <result column="refund_amount" property="refundAmount" jdbcType="DECIMAL" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="cash_num" property="cashNum" jdbcType="INTEGER" />
    <result column="cash_amount" property="cashAmount" jdbcType="DECIMAL" />
    <result column="bankcard_num" property="bankcardNum" jdbcType="INTEGER" />
    <result column="bankcard_amount" property="bankcardAmount" jdbcType="DECIMAL" />
    <result column="alipay_num" property="alipayNum" jdbcType="INTEGER" />
    <result column="alipay_amount" property="alipayAmount" jdbcType="DECIMAL" />
    <result column="wechat_num" property="wechatNum" jdbcType="INTEGER" />
    <result column="wechat_amount" property="wechatAmount" jdbcType="DECIMAL" />
    <result column="times_num" property="timesNum" jdbcType="INTEGER" />
    <result column="times_amount" property="timesAmount" jdbcType="DECIMAL" />
    <result column="total_num" property="totalNum" jdbcType="INTEGER" />
    <result column="total_amount" property="totalAmount" jdbcType="DECIMAL" />
    <result column="return_num" property="returnNum" jdbcType="INTEGER" />
    <result column="return_amount" property="returnAmount" jdbcType="DECIMAL" />
    <result column="change_num" property="changeNum" jdbcType="INTEGER" />
    <result column="change_amount" property="changeAmount" jdbcType="DECIMAL" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, company_id, shop_id, report_date, daily_amount, daily_count, average_price, actual_amount, 
    discount_amount, negotiation_num, negotiation_amount, activity_amount, ticket_amount, 
    loose_num, loose_amount, Integral_amount, received_amount, card_recharge, recharge_amount, 
    refund_amount, amount, cash_num, cash_amount, bankcard_num, bankcard_amount, alipay_num, 
    alipay_amount, wechat_num, wechat_amount, times_num, times_amount, total_num, total_amount, 
    return_num, return_amount, change_num, change_amount, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mudule.mumzonemarketcal.component.po.order.OrderDailyReportExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_daily_report
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from order_daily_report
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from order_daily_report
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.mudule.mumzonemarketcal.component.po.order.OrderDailyReportExample" >
    delete from order_daily_report
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mudule.mumzonemarketcal.component.po.order.OrderDailyReport" >
    insert into order_daily_report (id, company_id, shop_id, 
      report_date, daily_amount, daily_count, 
      average_price, actual_amount, discount_amount, 
      negotiation_num, negotiation_amount, activity_amount, 
      ticket_amount, loose_num, loose_amount, 
      Integral_amount, received_amount, card_recharge, 
      recharge_amount, refund_amount, amount, 
      cash_num, cash_amount, bankcard_num, 
      bankcard_amount, alipay_num, alipay_amount, 
      wechat_num, wechat_amount, times_num, 
      times_amount, total_num, total_amount, 
      return_num, return_amount, change_num, 
      change_amount, create_time, update_time
      )
    values (#{id,jdbcType=VARCHAR}, #{companyId,jdbcType=VARCHAR}, #{shopId,jdbcType=VARCHAR}, 
      #{reportDate,jdbcType=DATE}, #{dailyAmount,jdbcType=DECIMAL}, #{dailyCount,jdbcType=INTEGER}, 
      #{averagePrice,jdbcType=DECIMAL}, #{actualAmount,jdbcType=DECIMAL}, #{discountAmount,jdbcType=DECIMAL}, 
      #{negotiationNum,jdbcType=INTEGER}, #{negotiationAmount,jdbcType=DECIMAL}, #{activityAmount,jdbcType=DECIMAL}, 
      #{ticketAmount,jdbcType=DECIMAL}, #{looseNum,jdbcType=INTEGER}, #{looseAmount,jdbcType=DECIMAL}, 
      #{integralAmount,jdbcType=DECIMAL}, #{receivedAmount,jdbcType=DECIMAL}, #{cardRecharge,jdbcType=DECIMAL}, 
      #{rechargeAmount,jdbcType=DECIMAL}, #{refundAmount,jdbcType=DECIMAL}, #{amount,jdbcType=DECIMAL}, 
      #{cashNum,jdbcType=INTEGER}, #{cashAmount,jdbcType=DECIMAL}, #{bankcardNum,jdbcType=INTEGER}, 
      #{bankcardAmount,jdbcType=DECIMAL}, #{alipayNum,jdbcType=INTEGER}, #{alipayAmount,jdbcType=DECIMAL}, 
      #{wechatNum,jdbcType=INTEGER}, #{wechatAmount,jdbcType=DECIMAL}, #{timesNum,jdbcType=INTEGER}, 
      #{timesAmount,jdbcType=DECIMAL}, #{totalNum,jdbcType=INTEGER}, #{totalAmount,jdbcType=DECIMAL}, 
      #{returnNum,jdbcType=INTEGER}, #{returnAmount,jdbcType=DECIMAL}, #{changeNum,jdbcType=INTEGER}, 
      #{changeAmount,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mudule.mumzonemarketcal.component.po.order.OrderDailyReport" >
    insert into order_daily_report
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="shopId != null" >
        shop_id,
      </if>
      <if test="reportDate != null" >
        report_date,
      </if>
      <if test="dailyAmount != null" >
        daily_amount,
      </if>
      <if test="dailyCount != null" >
        daily_count,
      </if>
      <if test="averagePrice != null" >
        average_price,
      </if>
      <if test="actualAmount != null" >
        actual_amount,
      </if>
      <if test="discountAmount != null" >
        discount_amount,
      </if>
      <if test="negotiationNum != null" >
        negotiation_num,
      </if>
      <if test="negotiationAmount != null" >
        negotiation_amount,
      </if>
      <if test="activityAmount != null" >
        activity_amount,
      </if>
      <if test="ticketAmount != null" >
        ticket_amount,
      </if>
      <if test="looseNum != null" >
        loose_num,
      </if>
      <if test="looseAmount != null" >
        loose_amount,
      </if>
      <if test="integralAmount != null" >
        Integral_amount,
      </if>
      <if test="receivedAmount != null" >
        received_amount,
      </if>
      <if test="cardRecharge != null" >
        card_recharge,
      </if>
      <if test="rechargeAmount != null" >
        recharge_amount,
      </if>
      <if test="refundAmount != null" >
        refund_amount,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="cashNum != null" >
        cash_num,
      </if>
      <if test="cashAmount != null" >
        cash_amount,
      </if>
      <if test="bankcardNum != null" >
        bankcard_num,
      </if>
      <if test="bankcardAmount != null" >
        bankcard_amount,
      </if>
      <if test="alipayNum != null" >
        alipay_num,
      </if>
      <if test="alipayAmount != null" >
        alipay_amount,
      </if>
      <if test="wechatNum != null" >
        wechat_num,
      </if>
      <if test="wechatAmount != null" >
        wechat_amount,
      </if>
      <if test="timesNum != null" >
        times_num,
      </if>
      <if test="timesAmount != null" >
        times_amount,
      </if>
      <if test="totalNum != null" >
        total_num,
      </if>
      <if test="totalAmount != null" >
        total_amount,
      </if>
      <if test="returnNum != null" >
        return_num,
      </if>
      <if test="returnAmount != null" >
        return_amount,
      </if>
      <if test="changeNum != null" >
        change_num,
      </if>
      <if test="changeAmount != null" >
        change_amount,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="shopId != null" >
        #{shopId,jdbcType=VARCHAR},
      </if>
      <if test="reportDate != null" >
        #{reportDate,jdbcType=DATE},
      </if>
      <if test="dailyAmount != null" >
        #{dailyAmount,jdbcType=DECIMAL},
      </if>
      <if test="dailyCount != null" >
        #{dailyCount,jdbcType=INTEGER},
      </if>
      <if test="averagePrice != null" >
        #{averagePrice,jdbcType=DECIMAL},
      </if>
      <if test="actualAmount != null" >
        #{actualAmount,jdbcType=DECIMAL},
      </if>
      <if test="discountAmount != null" >
        #{discountAmount,jdbcType=DECIMAL},
      </if>
      <if test="negotiationNum != null" >
        #{negotiationNum,jdbcType=INTEGER},
      </if>
      <if test="negotiationAmount != null" >
        #{negotiationAmount,jdbcType=DECIMAL},
      </if>
      <if test="activityAmount != null" >
        #{activityAmount,jdbcType=DECIMAL},
      </if>
      <if test="ticketAmount != null" >
        #{ticketAmount,jdbcType=DECIMAL},
      </if>
      <if test="looseNum != null" >
        #{looseNum,jdbcType=INTEGER},
      </if>
      <if test="looseAmount != null" >
        #{looseAmount,jdbcType=DECIMAL},
      </if>
      <if test="integralAmount != null" >
        #{integralAmount,jdbcType=DECIMAL},
      </if>
      <if test="receivedAmount != null" >
        #{receivedAmount,jdbcType=DECIMAL},
      </if>
      <if test="cardRecharge != null" >
        #{cardRecharge,jdbcType=DECIMAL},
      </if>
      <if test="rechargeAmount != null" >
        #{rechargeAmount,jdbcType=DECIMAL},
      </if>
      <if test="refundAmount != null" >
        #{refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="cashNum != null" >
        #{cashNum,jdbcType=INTEGER},
      </if>
      <if test="cashAmount != null" >
        #{cashAmount,jdbcType=DECIMAL},
      </if>
      <if test="bankcardNum != null" >
        #{bankcardNum,jdbcType=INTEGER},
      </if>
      <if test="bankcardAmount != null" >
        #{bankcardAmount,jdbcType=DECIMAL},
      </if>
      <if test="alipayNum != null" >
        #{alipayNum,jdbcType=INTEGER},
      </if>
      <if test="alipayAmount != null" >
        #{alipayAmount,jdbcType=DECIMAL},
      </if>
      <if test="wechatNum != null" >
        #{wechatNum,jdbcType=INTEGER},
      </if>
      <if test="wechatAmount != null" >
        #{wechatAmount,jdbcType=DECIMAL},
      </if>
      <if test="timesNum != null" >
        #{timesNum,jdbcType=INTEGER},
      </if>
      <if test="timesAmount != null" >
        #{timesAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalNum != null" >
        #{totalNum,jdbcType=INTEGER},
      </if>
      <if test="totalAmount != null" >
        #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="returnNum != null" >
        #{returnNum,jdbcType=INTEGER},
      </if>
      <if test="returnAmount != null" >
        #{returnAmount,jdbcType=DECIMAL},
      </if>
      <if test="changeNum != null" >
        #{changeNum,jdbcType=INTEGER},
      </if>
      <if test="changeAmount != null" >
        #{changeAmount,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mudule.mumzonemarketcal.component.po.order.OrderDailyReportExample" resultType="java.lang.Integer" >
    select count(*) from order_daily_report
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update order_daily_report
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.companyId != null" >
        company_id = #{record.companyId,jdbcType=VARCHAR},
      </if>
      <if test="record.shopId != null" >
        shop_id = #{record.shopId,jdbcType=VARCHAR},
      </if>
      <if test="record.reportDate != null" >
        report_date = #{record.reportDate,jdbcType=DATE},
      </if>
      <if test="record.dailyAmount != null" >
        daily_amount = #{record.dailyAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.dailyCount != null" >
        daily_count = #{record.dailyCount,jdbcType=INTEGER},
      </if>
      <if test="record.averagePrice != null" >
        average_price = #{record.averagePrice,jdbcType=DECIMAL},
      </if>
      <if test="record.actualAmount != null" >
        actual_amount = #{record.actualAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.discountAmount != null" >
        discount_amount = #{record.discountAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.negotiationNum != null" >
        negotiation_num = #{record.negotiationNum,jdbcType=INTEGER},
      </if>
      <if test="record.negotiationAmount != null" >
        negotiation_amount = #{record.negotiationAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.activityAmount != null" >
        activity_amount = #{record.activityAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.ticketAmount != null" >
        ticket_amount = #{record.ticketAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.looseNum != null" >
        loose_num = #{record.looseNum,jdbcType=INTEGER},
      </if>
      <if test="record.looseAmount != null" >
        loose_amount = #{record.looseAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.integralAmount != null" >
        Integral_amount = #{record.integralAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.receivedAmount != null" >
        received_amount = #{record.receivedAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.cardRecharge != null" >
        card_recharge = #{record.cardRecharge,jdbcType=DECIMAL},
      </if>
      <if test="record.rechargeAmount != null" >
        recharge_amount = #{record.rechargeAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.refundAmount != null" >
        refund_amount = #{record.refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.cashNum != null" >
        cash_num = #{record.cashNum,jdbcType=INTEGER},
      </if>
      <if test="record.cashAmount != null" >
        cash_amount = #{record.cashAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.bankcardNum != null" >
        bankcard_num = #{record.bankcardNum,jdbcType=INTEGER},
      </if>
      <if test="record.bankcardAmount != null" >
        bankcard_amount = #{record.bankcardAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.alipayNum != null" >
        alipay_num = #{record.alipayNum,jdbcType=INTEGER},
      </if>
      <if test="record.alipayAmount != null" >
        alipay_amount = #{record.alipayAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.wechatNum != null" >
        wechat_num = #{record.wechatNum,jdbcType=INTEGER},
      </if>
      <if test="record.wechatAmount != null" >
        wechat_amount = #{record.wechatAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.timesNum != null" >
        times_num = #{record.timesNum,jdbcType=INTEGER},
      </if>
      <if test="record.timesAmount != null" >
        times_amount = #{record.timesAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.totalNum != null" >
        total_num = #{record.totalNum,jdbcType=INTEGER},
      </if>
      <if test="record.totalAmount != null" >
        total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.returnNum != null" >
        return_num = #{record.returnNum,jdbcType=INTEGER},
      </if>
      <if test="record.returnAmount != null" >
        return_amount = #{record.returnAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.changeNum != null" >
        change_num = #{record.changeNum,jdbcType=INTEGER},
      </if>
      <if test="record.changeAmount != null" >
        change_amount = #{record.changeAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update order_daily_report
    set id = #{record.id,jdbcType=VARCHAR},
      company_id = #{record.companyId,jdbcType=VARCHAR},
      shop_id = #{record.shopId,jdbcType=VARCHAR},
      report_date = #{record.reportDate,jdbcType=DATE},
      daily_amount = #{record.dailyAmount,jdbcType=DECIMAL},
      daily_count = #{record.dailyCount,jdbcType=INTEGER},
      average_price = #{record.averagePrice,jdbcType=DECIMAL},
      actual_amount = #{record.actualAmount,jdbcType=DECIMAL},
      discount_amount = #{record.discountAmount,jdbcType=DECIMAL},
      negotiation_num = #{record.negotiationNum,jdbcType=INTEGER},
      negotiation_amount = #{record.negotiationAmount,jdbcType=DECIMAL},
      activity_amount = #{record.activityAmount,jdbcType=DECIMAL},
      ticket_amount = #{record.ticketAmount,jdbcType=DECIMAL},
      loose_num = #{record.looseNum,jdbcType=INTEGER},
      loose_amount = #{record.looseAmount,jdbcType=DECIMAL},
      Integral_amount = #{record.integralAmount,jdbcType=DECIMAL},
      received_amount = #{record.receivedAmount,jdbcType=DECIMAL},
      card_recharge = #{record.cardRecharge,jdbcType=DECIMAL},
      recharge_amount = #{record.rechargeAmount,jdbcType=DECIMAL},
      refund_amount = #{record.refundAmount,jdbcType=DECIMAL},
      amount = #{record.amount,jdbcType=DECIMAL},
      cash_num = #{record.cashNum,jdbcType=INTEGER},
      cash_amount = #{record.cashAmount,jdbcType=DECIMAL},
      bankcard_num = #{record.bankcardNum,jdbcType=INTEGER},
      bankcard_amount = #{record.bankcardAmount,jdbcType=DECIMAL},
      alipay_num = #{record.alipayNum,jdbcType=INTEGER},
      alipay_amount = #{record.alipayAmount,jdbcType=DECIMAL},
      wechat_num = #{record.wechatNum,jdbcType=INTEGER},
      wechat_amount = #{record.wechatAmount,jdbcType=DECIMAL},
      times_num = #{record.timesNum,jdbcType=INTEGER},
      times_amount = #{record.timesAmount,jdbcType=DECIMAL},
      total_num = #{record.totalNum,jdbcType=INTEGER},
      total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      return_num = #{record.returnNum,jdbcType=INTEGER},
      return_amount = #{record.returnAmount,jdbcType=DECIMAL},
      change_num = #{record.changeNum,jdbcType=INTEGER},
      change_amount = #{record.changeAmount,jdbcType=DECIMAL},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mudule.mumzonemarketcal.component.po.order.OrderDailyReport" >
    update order_daily_report
    <set >
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="shopId != null" >
        shop_id = #{shopId,jdbcType=VARCHAR},
      </if>
      <if test="reportDate != null" >
        report_date = #{reportDate,jdbcType=DATE},
      </if>
      <if test="dailyAmount != null" >
        daily_amount = #{dailyAmount,jdbcType=DECIMAL},
      </if>
      <if test="dailyCount != null" >
        daily_count = #{dailyCount,jdbcType=INTEGER},
      </if>
      <if test="averagePrice != null" >
        average_price = #{averagePrice,jdbcType=DECIMAL},
      </if>
      <if test="actualAmount != null" >
        actual_amount = #{actualAmount,jdbcType=DECIMAL},
      </if>
      <if test="discountAmount != null" >
        discount_amount = #{discountAmount,jdbcType=DECIMAL},
      </if>
      <if test="negotiationNum != null" >
        negotiation_num = #{negotiationNum,jdbcType=INTEGER},
      </if>
      <if test="negotiationAmount != null" >
        negotiation_amount = #{negotiationAmount,jdbcType=DECIMAL},
      </if>
      <if test="activityAmount != null" >
        activity_amount = #{activityAmount,jdbcType=DECIMAL},
      </if>
      <if test="ticketAmount != null" >
        ticket_amount = #{ticketAmount,jdbcType=DECIMAL},
      </if>
      <if test="looseNum != null" >
        loose_num = #{looseNum,jdbcType=INTEGER},
      </if>
      <if test="looseAmount != null" >
        loose_amount = #{looseAmount,jdbcType=DECIMAL},
      </if>
      <if test="integralAmount != null" >
        Integral_amount = #{integralAmount,jdbcType=DECIMAL},
      </if>
      <if test="receivedAmount != null" >
        received_amount = #{receivedAmount,jdbcType=DECIMAL},
      </if>
      <if test="cardRecharge != null" >
        card_recharge = #{cardRecharge,jdbcType=DECIMAL},
      </if>
      <if test="rechargeAmount != null" >
        recharge_amount = #{rechargeAmount,jdbcType=DECIMAL},
      </if>
      <if test="refundAmount != null" >
        refund_amount = #{refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="cashNum != null" >
        cash_num = #{cashNum,jdbcType=INTEGER},
      </if>
      <if test="cashAmount != null" >
        cash_amount = #{cashAmount,jdbcType=DECIMAL},
      </if>
      <if test="bankcardNum != null" >
        bankcard_num = #{bankcardNum,jdbcType=INTEGER},
      </if>
      <if test="bankcardAmount != null" >
        bankcard_amount = #{bankcardAmount,jdbcType=DECIMAL},
      </if>
      <if test="alipayNum != null" >
        alipay_num = #{alipayNum,jdbcType=INTEGER},
      </if>
      <if test="alipayAmount != null" >
        alipay_amount = #{alipayAmount,jdbcType=DECIMAL},
      </if>
      <if test="wechatNum != null" >
        wechat_num = #{wechatNum,jdbcType=INTEGER},
      </if>
      <if test="wechatAmount != null" >
        wechat_amount = #{wechatAmount,jdbcType=DECIMAL},
      </if>
      <if test="timesNum != null" >
        times_num = #{timesNum,jdbcType=INTEGER},
      </if>
      <if test="timesAmount != null" >
        times_amount = #{timesAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalNum != null" >
        total_num = #{totalNum,jdbcType=INTEGER},
      </if>
      <if test="totalAmount != null" >
        total_amount = #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="returnNum != null" >
        return_num = #{returnNum,jdbcType=INTEGER},
      </if>
      <if test="returnAmount != null" >
        return_amount = #{returnAmount,jdbcType=DECIMAL},
      </if>
      <if test="changeNum != null" >
        change_num = #{changeNum,jdbcType=INTEGER},
      </if>
      <if test="changeAmount != null" >
        change_amount = #{changeAmount,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mudule.mumzonemarketcal.component.po.order.OrderDailyReport" >
    update order_daily_report
    set company_id = #{companyId,jdbcType=VARCHAR},
      shop_id = #{shopId,jdbcType=VARCHAR},
      report_date = #{reportDate,jdbcType=DATE},
      daily_amount = #{dailyAmount,jdbcType=DECIMAL},
      daily_count = #{dailyCount,jdbcType=INTEGER},
      average_price = #{averagePrice,jdbcType=DECIMAL},
      actual_amount = #{actualAmount,jdbcType=DECIMAL},
      discount_amount = #{discountAmount,jdbcType=DECIMAL},
      negotiation_num = #{negotiationNum,jdbcType=INTEGER},
      negotiation_amount = #{negotiationAmount,jdbcType=DECIMAL},
      activity_amount = #{activityAmount,jdbcType=DECIMAL},
      ticket_amount = #{ticketAmount,jdbcType=DECIMAL},
      loose_num = #{looseNum,jdbcType=INTEGER},
      loose_amount = #{looseAmount,jdbcType=DECIMAL},
      Integral_amount = #{integralAmount,jdbcType=DECIMAL},
      received_amount = #{receivedAmount,jdbcType=DECIMAL},
      card_recharge = #{cardRecharge,jdbcType=DECIMAL},
      recharge_amount = #{rechargeAmount,jdbcType=DECIMAL},
      refund_amount = #{refundAmount,jdbcType=DECIMAL},
      amount = #{amount,jdbcType=DECIMAL},
      cash_num = #{cashNum,jdbcType=INTEGER},
      cash_amount = #{cashAmount,jdbcType=DECIMAL},
      bankcard_num = #{bankcardNum,jdbcType=INTEGER},
      bankcard_amount = #{bankcardAmount,jdbcType=DECIMAL},
      alipay_num = #{alipayNum,jdbcType=INTEGER},
      alipay_amount = #{alipayAmount,jdbcType=DECIMAL},
      wechat_num = #{wechatNum,jdbcType=INTEGER},
      wechat_amount = #{wechatAmount,jdbcType=DECIMAL},
      times_num = #{timesNum,jdbcType=INTEGER},
      times_amount = #{timesAmount,jdbcType=DECIMAL},
      total_num = #{totalNum,jdbcType=INTEGER},
      total_amount = #{totalAmount,jdbcType=DECIMAL},
      return_num = #{returnNum,jdbcType=INTEGER},
      return_amount = #{returnAmount,jdbcType=DECIMAL},
      change_num = #{changeNum,jdbcType=INTEGER},
      change_amount = #{changeAmount,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>