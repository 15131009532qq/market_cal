<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mudule.mumzonemarketcal.component.mapper.market.MarketOpencardTicketMapper" >
  <resultMap id="BaseResultMap" type="com.mudule.mumzonemarketcal.component.po.market.MarketOpencardTicket" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="opencard_id" property="opencardId" jdbcType="VARCHAR" />
    <result column="ticket_id" property="ticketId" jdbcType="VARCHAR" />
    <result column="ticket_type" property="ticketType" jdbcType="TINYINT" />
    <result column="ticket_num" property="ticketNum" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, opencard_id, ticket_id, ticket_type, ticket_num, status, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mudule.mumzonemarketcal.component.po.market.MarketOpencardTicketExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from market_opencard_ticket
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from market_opencard_ticket
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from market_opencard_ticket
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.mudule.mumzonemarketcal.component.po.market.MarketOpencardTicketExample" >
    delete from market_opencard_ticket
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mudule.mumzonemarketcal.component.po.market.MarketOpencardTicket" >
    insert into market_opencard_ticket (id, opencard_id, ticket_id, 
      ticket_type, ticket_num, status, 
      create_time, update_time)
    values (#{id,jdbcType=VARCHAR}, #{opencardId,jdbcType=VARCHAR}, #{ticketId,jdbcType=VARCHAR}, 
      #{ticketType,jdbcType=TINYINT}, #{ticketNum,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.mudule.mumzonemarketcal.component.po.market.MarketOpencardTicket" >
    insert into market_opencard_ticket
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="opencardId != null" >
        opencard_id,
      </if>
      <if test="ticketId != null" >
        ticket_id,
      </if>
      <if test="ticketType != null" >
        ticket_type,
      </if>
      <if test="ticketNum != null" >
        ticket_num,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="opencardId != null" >
        #{opencardId,jdbcType=VARCHAR},
      </if>
      <if test="ticketId != null" >
        #{ticketId,jdbcType=VARCHAR},
      </if>
      <if test="ticketType != null" >
        #{ticketType,jdbcType=TINYINT},
      </if>
      <if test="ticketNum != null" >
        #{ticketNum,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mudule.mumzonemarketcal.component.po.market.MarketOpencardTicketExample" resultType="java.lang.Integer" >
    select count(*) from market_opencard_ticket
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update market_opencard_ticket
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.opencardId != null" >
        opencard_id = #{record.opencardId,jdbcType=VARCHAR},
      </if>
      <if test="record.ticketId != null" >
        ticket_id = #{record.ticketId,jdbcType=VARCHAR},
      </if>
      <if test="record.ticketType != null" >
        ticket_type = #{record.ticketType,jdbcType=TINYINT},
      </if>
      <if test="record.ticketNum != null" >
        ticket_num = #{record.ticketNum,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update market_opencard_ticket
    set id = #{record.id,jdbcType=VARCHAR},
      opencard_id = #{record.opencardId,jdbcType=VARCHAR},
      ticket_id = #{record.ticketId,jdbcType=VARCHAR},
      ticket_type = #{record.ticketType,jdbcType=TINYINT},
      ticket_num = #{record.ticketNum,jdbcType=INTEGER},
      status = #{record.status,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mudule.mumzonemarketcal.component.po.market.MarketOpencardTicket" >
    update market_opencard_ticket
    <set >
      <if test="opencardId != null" >
        opencard_id = #{opencardId,jdbcType=VARCHAR},
      </if>
      <if test="ticketId != null" >
        ticket_id = #{ticketId,jdbcType=VARCHAR},
      </if>
      <if test="ticketType != null" >
        ticket_type = #{ticketType,jdbcType=TINYINT},
      </if>
      <if test="ticketNum != null" >
        ticket_num = #{ticketNum,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mudule.mumzonemarketcal.component.po.market.MarketOpencardTicket" >
    update market_opencard_ticket
    set opencard_id = #{opencardId,jdbcType=VARCHAR},
      ticket_id = #{ticketId,jdbcType=VARCHAR},
      ticket_type = #{ticketType,jdbcType=TINYINT},
      ticket_num = #{ticketNum,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>