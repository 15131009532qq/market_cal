<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mudule.mumzonemarketcal.component.mapper.market.MarketTicketMapper" >
  <resultMap id="BaseResultMap" type="com.mudule.mumzonemarketcal.component.po.market.MarketTicket" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="org_id" property="orgId" jdbcType="VARCHAR" />
    <result column="ticket_name" property="ticketName" jdbcType="VARCHAR" />
    <result column="ticket_sub_name" property="ticketSubName" jdbcType="VARCHAR" />
    <result column="ticket_type" property="ticketType" jdbcType="TINYINT" />
    <result column="ticket_amount" property="ticketAmount" jdbcType="DECIMAL" />
    <result column="is_share" property="isShare" jdbcType="TINYINT" />
    <result column="limit_amount" property="limitAmount" jdbcType="DECIMAL" />
    <result column="limit_count" property="limitCount" jdbcType="INTEGER" />
    <result column="ticket_discount" property="ticketDiscount" jdbcType="DECIMAL" />
    <result column="give_count" property="giveCount" jdbcType="INTEGER" />
    <result column="valid_type" property="validType" jdbcType="TINYINT" />
    <result column="valid_day" property="validDay" jdbcType="INTEGER" />
    <result column="start_date" property="startDate" jdbcType="DATE" />
    <result column="end_date" property="endDate" jdbcType="DATE" />
    <result column="put_channel" property="putChannel" jdbcType="TINYINT" />
    <result column="join_type" property="joinType" jdbcType="TINYINT" />
    <result column="apply_type" property="applyType" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="dr" property="dr" jdbcType="TINYINT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.mudule.mumzonemarketcal.component.po.market.MarketTicketWithBLOBs" extends="BaseResultMap" >
    <result column="ticket_desc" property="ticketDesc" jdbcType="LONGVARCHAR" />
    <result column="use_instructions" property="useInstructions" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, org_id, ticket_name, ticket_sub_name, ticket_type, ticket_amount, is_share, limit_amount, 
    limit_count, ticket_discount, give_count, valid_type, valid_day, start_date, end_date, 
    put_channel, join_type, apply_type, create_time, update_time, dr
  </sql>
  <sql id="Blob_Column_List" >
    ticket_desc, use_instructions
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.mudule.mumzonemarketcal.component.po.market.MarketTicketExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from market_ticket
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mudule.mumzonemarketcal.component.po.market.MarketTicketExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from market_ticket
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from market_ticket
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from market_ticket
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.mudule.mumzonemarketcal.component.po.market.MarketTicketExample" >
    delete from market_ticket
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mudule.mumzonemarketcal.component.po.market.MarketTicketWithBLOBs" >
    insert into market_ticket (id, org_id, ticket_name, 
      ticket_sub_name, ticket_type, ticket_amount, 
      is_share, limit_amount, limit_count, 
      ticket_discount, give_count, valid_type, 
      valid_day, start_date, end_date, 
      put_channel, join_type, apply_type, 
      create_time, update_time, dr, 
      ticket_desc, use_instructions)
    values (#{id,jdbcType=VARCHAR}, #{orgId,jdbcType=VARCHAR}, #{ticketName,jdbcType=VARCHAR}, 
      #{ticketSubName,jdbcType=VARCHAR}, #{ticketType,jdbcType=TINYINT}, #{ticketAmount,jdbcType=DECIMAL}, 
      #{isShare,jdbcType=TINYINT}, #{limitAmount,jdbcType=DECIMAL}, #{limitCount,jdbcType=INTEGER}, 
      #{ticketDiscount,jdbcType=DECIMAL}, #{giveCount,jdbcType=INTEGER}, #{validType,jdbcType=TINYINT}, 
      #{validDay,jdbcType=INTEGER}, #{startDate,jdbcType=DATE}, #{endDate,jdbcType=DATE}, 
      #{putChannel,jdbcType=TINYINT}, #{joinType,jdbcType=TINYINT}, #{applyType,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{dr,jdbcType=TINYINT}, 
      #{ticketDesc,jdbcType=LONGVARCHAR}, #{useInstructions,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.mudule.mumzonemarketcal.component.po.market.MarketTicketWithBLOBs" >
    insert into market_ticket
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orgId != null" >
        org_id,
      </if>
      <if test="ticketName != null" >
        ticket_name,
      </if>
      <if test="ticketSubName != null" >
        ticket_sub_name,
      </if>
      <if test="ticketType != null" >
        ticket_type,
      </if>
      <if test="ticketAmount != null" >
        ticket_amount,
      </if>
      <if test="isShare != null" >
        is_share,
      </if>
      <if test="limitAmount != null" >
        limit_amount,
      </if>
      <if test="limitCount != null" >
        limit_count,
      </if>
      <if test="ticketDiscount != null" >
        ticket_discount,
      </if>
      <if test="giveCount != null" >
        give_count,
      </if>
      <if test="validType != null" >
        valid_type,
      </if>
      <if test="validDay != null" >
        valid_day,
      </if>
      <if test="startDate != null" >
        start_date,
      </if>
      <if test="endDate != null" >
        end_date,
      </if>
      <if test="putChannel != null" >
        put_channel,
      </if>
      <if test="joinType != null" >
        join_type,
      </if>
      <if test="applyType != null" >
        apply_type,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="dr != null" >
        dr,
      </if>
      <if test="ticketDesc != null" >
        ticket_desc,
      </if>
      <if test="useInstructions != null" >
        use_instructions,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="orgId != null" >
        #{orgId,jdbcType=VARCHAR},
      </if>
      <if test="ticketName != null" >
        #{ticketName,jdbcType=VARCHAR},
      </if>
      <if test="ticketSubName != null" >
        #{ticketSubName,jdbcType=VARCHAR},
      </if>
      <if test="ticketType != null" >
        #{ticketType,jdbcType=TINYINT},
      </if>
      <if test="ticketAmount != null" >
        #{ticketAmount,jdbcType=DECIMAL},
      </if>
      <if test="isShare != null" >
        #{isShare,jdbcType=TINYINT},
      </if>
      <if test="limitAmount != null" >
        #{limitAmount,jdbcType=DECIMAL},
      </if>
      <if test="limitCount != null" >
        #{limitCount,jdbcType=INTEGER},
      </if>
      <if test="ticketDiscount != null" >
        #{ticketDiscount,jdbcType=DECIMAL},
      </if>
      <if test="giveCount != null" >
        #{giveCount,jdbcType=INTEGER},
      </if>
      <if test="validType != null" >
        #{validType,jdbcType=TINYINT},
      </if>
      <if test="validDay != null" >
        #{validDay,jdbcType=INTEGER},
      </if>
      <if test="startDate != null" >
        #{startDate,jdbcType=DATE},
      </if>
      <if test="endDate != null" >
        #{endDate,jdbcType=DATE},
      </if>
      <if test="putChannel != null" >
        #{putChannel,jdbcType=TINYINT},
      </if>
      <if test="joinType != null" >
        #{joinType,jdbcType=TINYINT},
      </if>
      <if test="applyType != null" >
        #{applyType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dr != null" >
        #{dr,jdbcType=TINYINT},
      </if>
      <if test="ticketDesc != null" >
        #{ticketDesc,jdbcType=LONGVARCHAR},
      </if>
      <if test="useInstructions != null" >
        #{useInstructions,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mudule.mumzonemarketcal.component.po.market.MarketTicketExample" resultType="java.lang.Integer" >
    select count(*) from market_ticket
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update market_ticket
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.orgId != null" >
        org_id = #{record.orgId,jdbcType=VARCHAR},
      </if>
      <if test="record.ticketName != null" >
        ticket_name = #{record.ticketName,jdbcType=VARCHAR},
      </if>
      <if test="record.ticketSubName != null" >
        ticket_sub_name = #{record.ticketSubName,jdbcType=VARCHAR},
      </if>
      <if test="record.ticketType != null" >
        ticket_type = #{record.ticketType,jdbcType=TINYINT},
      </if>
      <if test="record.ticketAmount != null" >
        ticket_amount = #{record.ticketAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.isShare != null" >
        is_share = #{record.isShare,jdbcType=TINYINT},
      </if>
      <if test="record.limitAmount != null" >
        limit_amount = #{record.limitAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.limitCount != null" >
        limit_count = #{record.limitCount,jdbcType=INTEGER},
      </if>
      <if test="record.ticketDiscount != null" >
        ticket_discount = #{record.ticketDiscount,jdbcType=DECIMAL},
      </if>
      <if test="record.giveCount != null" >
        give_count = #{record.giveCount,jdbcType=INTEGER},
      </if>
      <if test="record.validType != null" >
        valid_type = #{record.validType,jdbcType=TINYINT},
      </if>
      <if test="record.validDay != null" >
        valid_day = #{record.validDay,jdbcType=INTEGER},
      </if>
      <if test="record.startDate != null" >
        start_date = #{record.startDate,jdbcType=DATE},
      </if>
      <if test="record.endDate != null" >
        end_date = #{record.endDate,jdbcType=DATE},
      </if>
      <if test="record.putChannel != null" >
        put_channel = #{record.putChannel,jdbcType=TINYINT},
      </if>
      <if test="record.joinType != null" >
        join_type = #{record.joinType,jdbcType=TINYINT},
      </if>
      <if test="record.applyType != null" >
        apply_type = #{record.applyType,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dr != null" >
        dr = #{record.dr,jdbcType=TINYINT},
      </if>
      <if test="record.ticketDesc != null" >
        ticket_desc = #{record.ticketDesc,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.useInstructions != null" >
        use_instructions = #{record.useInstructions,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update market_ticket
    set id = #{record.id,jdbcType=VARCHAR},
      org_id = #{record.orgId,jdbcType=VARCHAR},
      ticket_name = #{record.ticketName,jdbcType=VARCHAR},
      ticket_sub_name = #{record.ticketSubName,jdbcType=VARCHAR},
      ticket_type = #{record.ticketType,jdbcType=TINYINT},
      ticket_amount = #{record.ticketAmount,jdbcType=DECIMAL},
      is_share = #{record.isShare,jdbcType=TINYINT},
      limit_amount = #{record.limitAmount,jdbcType=DECIMAL},
      limit_count = #{record.limitCount,jdbcType=INTEGER},
      ticket_discount = #{record.ticketDiscount,jdbcType=DECIMAL},
      give_count = #{record.giveCount,jdbcType=INTEGER},
      valid_type = #{record.validType,jdbcType=TINYINT},
      valid_day = #{record.validDay,jdbcType=INTEGER},
      start_date = #{record.startDate,jdbcType=DATE},
      end_date = #{record.endDate,jdbcType=DATE},
      put_channel = #{record.putChannel,jdbcType=TINYINT},
      join_type = #{record.joinType,jdbcType=TINYINT},
      apply_type = #{record.applyType,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      dr = #{record.dr,jdbcType=TINYINT},
      ticket_desc = #{record.ticketDesc,jdbcType=LONGVARCHAR},
      use_instructions = #{record.useInstructions,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update market_ticket
    set id = #{record.id,jdbcType=VARCHAR},
      org_id = #{record.orgId,jdbcType=VARCHAR},
      ticket_name = #{record.ticketName,jdbcType=VARCHAR},
      ticket_sub_name = #{record.ticketSubName,jdbcType=VARCHAR},
      ticket_type = #{record.ticketType,jdbcType=TINYINT},
      ticket_amount = #{record.ticketAmount,jdbcType=DECIMAL},
      is_share = #{record.isShare,jdbcType=TINYINT},
      limit_amount = #{record.limitAmount,jdbcType=DECIMAL},
      limit_count = #{record.limitCount,jdbcType=INTEGER},
      ticket_discount = #{record.ticketDiscount,jdbcType=DECIMAL},
      give_count = #{record.giveCount,jdbcType=INTEGER},
      valid_type = #{record.validType,jdbcType=TINYINT},
      valid_day = #{record.validDay,jdbcType=INTEGER},
      start_date = #{record.startDate,jdbcType=DATE},
      end_date = #{record.endDate,jdbcType=DATE},
      put_channel = #{record.putChannel,jdbcType=TINYINT},
      join_type = #{record.joinType,jdbcType=TINYINT},
      apply_type = #{record.applyType,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      dr = #{record.dr,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mudule.mumzonemarketcal.component.po.market.MarketTicketWithBLOBs" >
    update market_ticket
    <set >
      <if test="orgId != null" >
        org_id = #{orgId,jdbcType=VARCHAR},
      </if>
      <if test="ticketName != null" >
        ticket_name = #{ticketName,jdbcType=VARCHAR},
      </if>
      <if test="ticketSubName != null" >
        ticket_sub_name = #{ticketSubName,jdbcType=VARCHAR},
      </if>
      <if test="ticketType != null" >
        ticket_type = #{ticketType,jdbcType=TINYINT},
      </if>
      <if test="ticketAmount != null" >
        ticket_amount = #{ticketAmount,jdbcType=DECIMAL},
      </if>
      <if test="isShare != null" >
        is_share = #{isShare,jdbcType=TINYINT},
      </if>
      <if test="limitAmount != null" >
        limit_amount = #{limitAmount,jdbcType=DECIMAL},
      </if>
      <if test="limitCount != null" >
        limit_count = #{limitCount,jdbcType=INTEGER},
      </if>
      <if test="ticketDiscount != null" >
        ticket_discount = #{ticketDiscount,jdbcType=DECIMAL},
      </if>
      <if test="giveCount != null" >
        give_count = #{giveCount,jdbcType=INTEGER},
      </if>
      <if test="validType != null" >
        valid_type = #{validType,jdbcType=TINYINT},
      </if>
      <if test="validDay != null" >
        valid_day = #{validDay,jdbcType=INTEGER},
      </if>
      <if test="startDate != null" >
        start_date = #{startDate,jdbcType=DATE},
      </if>
      <if test="endDate != null" >
        end_date = #{endDate,jdbcType=DATE},
      </if>
      <if test="putChannel != null" >
        put_channel = #{putChannel,jdbcType=TINYINT},
      </if>
      <if test="joinType != null" >
        join_type = #{joinType,jdbcType=TINYINT},
      </if>
      <if test="applyType != null" >
        apply_type = #{applyType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dr != null" >
        dr = #{dr,jdbcType=TINYINT},
      </if>
      <if test="ticketDesc != null" >
        ticket_desc = #{ticketDesc,jdbcType=LONGVARCHAR},
      </if>
      <if test="useInstructions != null" >
        use_instructions = #{useInstructions,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.mudule.mumzonemarketcal.component.po.market.MarketTicketWithBLOBs" >
    update market_ticket
    set org_id = #{orgId,jdbcType=VARCHAR},
      ticket_name = #{ticketName,jdbcType=VARCHAR},
      ticket_sub_name = #{ticketSubName,jdbcType=VARCHAR},
      ticket_type = #{ticketType,jdbcType=TINYINT},
      ticket_amount = #{ticketAmount,jdbcType=DECIMAL},
      is_share = #{isShare,jdbcType=TINYINT},
      limit_amount = #{limitAmount,jdbcType=DECIMAL},
      limit_count = #{limitCount,jdbcType=INTEGER},
      ticket_discount = #{ticketDiscount,jdbcType=DECIMAL},
      give_count = #{giveCount,jdbcType=INTEGER},
      valid_type = #{validType,jdbcType=TINYINT},
      valid_day = #{validDay,jdbcType=INTEGER},
      start_date = #{startDate,jdbcType=DATE},
      end_date = #{endDate,jdbcType=DATE},
      put_channel = #{putChannel,jdbcType=TINYINT},
      join_type = #{joinType,jdbcType=TINYINT},
      apply_type = #{applyType,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      dr = #{dr,jdbcType=TINYINT},
      ticket_desc = #{ticketDesc,jdbcType=LONGVARCHAR},
      use_instructions = #{useInstructions,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mudule.mumzonemarketcal.component.po.market.MarketTicket" >
    update market_ticket
    set org_id = #{orgId,jdbcType=VARCHAR},
      ticket_name = #{ticketName,jdbcType=VARCHAR},
      ticket_sub_name = #{ticketSubName,jdbcType=VARCHAR},
      ticket_type = #{ticketType,jdbcType=TINYINT},
      ticket_amount = #{ticketAmount,jdbcType=DECIMAL},
      is_share = #{isShare,jdbcType=TINYINT},
      limit_amount = #{limitAmount,jdbcType=DECIMAL},
      limit_count = #{limitCount,jdbcType=INTEGER},
      ticket_discount = #{ticketDiscount,jdbcType=DECIMAL},
      give_count = #{giveCount,jdbcType=INTEGER},
      valid_type = #{validType,jdbcType=TINYINT},
      valid_day = #{validDay,jdbcType=INTEGER},
      start_date = #{startDate,jdbcType=DATE},
      end_date = #{endDate,jdbcType=DATE},
      put_channel = #{putChannel,jdbcType=TINYINT},
      join_type = #{joinType,jdbcType=TINYINT},
      apply_type = #{applyType,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      dr = #{dr,jdbcType=TINYINT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectById" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from market_ticket
    where id = #{id,jdbcType=VARCHAR}
  </select>
</mapper>